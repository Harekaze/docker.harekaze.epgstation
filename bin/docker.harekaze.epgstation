#!/bin/sh
# Copyright (C) 2020 Yuki MIZUNO
# https://github.com/Harekaze/docker.harekaze.epgstation/
# SPDX-License-Identifier: GPL-3.0-only

DOCKER_IMAGE="l3tnun/epgstation"
IMAGE_VERSION="v1.7.0"

name="$(basename $0)"
. /etc/profile

# https://github.com/LibreELEC/LibreELEC.tv/blob/9.2.3/packages/mediacenter/kodi/patches/kodi-100.08-setup-timezone.patch
if [ -f /storage/.cache/timezone ]; then
  . /storage/.cache/timezone
else
  TIMEZONE="Asia/Tokyo"
fi

# https://github.com/LibreELEC/LibreELEC.tv/blob/9.2.3/packages/mediacenter/kodi/profile.d/00-addons.conf
oe_setup_addon "$name"

CONFIG_DIR=/storage/.config/epgstation/

function setup() {
  mkdir -p $CONFIG_DIR/
  cp -r -u $ADDON_DIR/config/* $CONFIG_DIR/
  mkdir -p $ADDON_HOME/thumbnail
  mkdir -p $ADDON_HOME/data
  mkdir -p $ADDON_HOME/logs
}

function update() {
  if [ x$(docker image ls "$DOCKER_IMAGE":"$IMAGE_VERSION" -q) == x ]
  then
    kodi-send --action="Notification($name, Updating docker image)"
    docker pull "$DOCKER_IMAGE":"$IMAGE_VERSION"
    docker rmi $(docker image ls "$DOCKER_IMAGE" -f before="$DOCKER_IMAGE":"$IMAGE_VERSION" -q)
  fi
  docker image prune -f 2> /dev/null
}

function start() {
  setup
  update
  docker rm "$name" 2>/dev/null
  docker run --name="$name" \
    --rm \
    --link=docker.harekaze.mirakurun \
    --network=bridge \
    -e TZ="$TIMEZONE" \
    -e LD_LIBRARY_PATH=/usr/local/hostlib:/usr/local/ffmpeg-tools \
    -v /usr/lib:/usr/local/hostlib:ro \
    -v /storage/.kodi/addons/tools.ffmpeg-tools:/usr/local/ffmpeg-tools:ro \
    -v "$CONFIG_DIR":/app/config \
    -v "$ADDON_HOME/thumbnail":/app/thumbnail \
    -v "$ADDON_HOME/data":/app/data \
    -v "$ADDON_HOME/logs":/app/logs \
    -v "$SETTING_RECORDING_DIR":/app/recorded \
    -p 8888:8888 \
    -p 8889:8889 \
    "$DOCKER_IMAGE":"$IMAGE_VERSION"
}

function stop() {
  docker stop "$name"
}

function status() {
  test x$(docker ps --filter name="$name" -q) != "x"
}

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  status)
    status
    ;;
  restart)
    stop
    start
    ;;
  *)
    echo $"Usage: $0 {start|stop|restart|status}"
    exit 1
esac
